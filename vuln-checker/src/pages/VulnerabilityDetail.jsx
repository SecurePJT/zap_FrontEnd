import React from 'react';
import { useParams, Link } from 'react-router-dom';

const exampleCodes = {
  "Missing Anti-clickjacking Header": {
    insecure: `<iframe src="https://example.com"></iframe>`,
    secure: `res.setHeader("X-Frame-Options", "DENY");`
  },
  "Strict-Transport-Security Header Not Set": {
    insecure: `// HSTS 미설정`,
    secure: `res.setHeader("Strict-Transport-Security", "max-age=31536000; includeSubDomains");`
  },
  "Content Security Policy (CSP) Header Not Set": {
    insecure: `// CSP 미설정`,
    secure: `res.setHeader("Content-Security-Policy", "default-src 'self'");`
  }
  // 필요시 더 추가 가능
};

const VulnerabilityDetail = () => {
  const { alertName } = useParams();
  const decodedName = decodeURIComponent(alertName);
  const code = exampleCodes[decodedName];

  return (
    <div className="max-w-3xl mx-auto mt-10 px-4">
      <h1 className="text-2xl font-bold mb-4">{decodedName}</h1>
      {code ? (
        <>
          <div className="mb-6">
            <h2 className="text-xl font-semibold mb-2 text-red-600">취약한 코드</h2>
            <pre className="bg-gray-100 p-4 rounded text-sm overflow-x-auto">
              {code.insecure}
            </pre>
          </div>
          <div className="mb-6">
            <h2 className="text-xl font-semibold mb-2 text-green-600">보완된 코드</h2>
            <pre className="bg-gray-100 p-4 rounded text-sm overflow-x-auto">
              {code.secure}
            </pre>
          </div>
        </>
      ) : (
        <p>예시 코드가 없습니다.</p>
      )}
      <Link to="/" className="text-blue-600 hover:underline">&larr; 목록으로</Link>
    </div>
  );
};

export default VulnerabilityDetail;
