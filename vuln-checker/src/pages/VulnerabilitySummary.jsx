//취약점 목록과 리스크 를 보여줌
// VulnerabilitySummary.jsx
import React from 'react';
import { Link, useLocation } from 'react-router-dom';

export default function VulnerabilitySummary() {
  const location = useLocation();

  const exampleAlerts = [
    {
      risk: "Medium",
      name: "Content Security Policy (CSP) Header Not Set",
    },
    {
      risk: "Medium",
      name: "Missing Anti-clickjacking Header",
    },
  ];

  const alerts = location.state?.alerts && location.state.alerts.length > 0
    ? location.state.alerts
    : exampleAlerts;

  return (
    <div className="max-w-4xl mx-auto p-8 bg-white rounded-lg shadow-lg">
      <h1 className="text-3xl font-extrabold mb-8 text-gray-800 border-b-2 border-indigo-600 pb-2">
        취약점 요약
      </h1>

      <table className="w-full table-auto border-collapse">
        <thead>
          <tr className="bg-indigo-100">
            <th className="border border-indigo-300 px-6 py-3 text-left text-indigo-700 uppercase tracking-wide">취약점 이름</th>
            <th className="border border-indigo-300 px-6 py-3 text-left text-indigo-700 uppercase tracking-wide">위험도</th>
          </tr>
        </thead>
        <tbody>
          {alerts.map((alert, index) => (
            <tr
              key={index}
              className={`hover:bg-indigo-50 ${index % 2 === 0 ? 'bg-white' : 'bg-indigo-50'}`}
            >
              <td className="border border-indigo-300 px-6 py-3">
                <Link
                  to={`/vulnerability-detail/${encodeURIComponent(alert.name)}`}
                  className="text-indigo-600 hover:text-indigo-900 font-semibold underline"
                >
                  {alert.name}
                </Link>
              </td>
              <td className="border border-indigo-300 px-6 py-3 font-medium text-gray-700">
                {alert.risk}
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}
